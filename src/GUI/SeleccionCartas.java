/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.Juego;
import javax.swing.ImageIcon;

/**
 *
 * @author Charlie
 */
public class SeleccionCartas extends javax.swing.JFrame {

    private final Juego juegoActual;
    private int index;
    private final MainWindow mw;
    private final String aux;

    /**
     * Creates new form SeleccionCartas
     * @param juegoActual
     * @param mw
     * @param aux
     */
    public SeleccionCartas(Juego juegoActual, MainWindow mw, String aux) {
        this.juegoActual = juegoActual;
        this.mw = mw;
        this.aux = aux;
        initComponents();
        setLocationRelativeTo(null);
        String[] baraja = new String[juegoActual.getBaraja().getBaraja().size()];
        for (int i = 0; i < baraja.length; i++) {
            baraja[i] = juegoActual.getBaraja().getBaraja().get(i).toString();
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(baraja));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jComboBox1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButtonAceptar.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAceptar)
                        .addGap(52, 52, 52)
                        .addComponent(jButtonCancelar)
                        .addGap(0, 122, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int getIndex() {
        return index;
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        int indice = jComboBox1.getSelectedIndex();
        if (this.aux.equalsIgnoreCase("arr1")) {
            juegoActual.getJugArr().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArr().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("ab1")) {
            juegoActual.getJugAb().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAb().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("abdcha1")) {
            juegoActual.getJugAbDcha().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAbDcha().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("abizda1")) {
            juegoActual.getJugAbIzda().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAbIzda().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("arrdcha1")) {
            juegoActual.getJugArrDcha().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArrDcha().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("arrizda1")) {
            juegoActual.getJugArrIzda().setCarta1(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArrIzda().getjLabelCarta1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("arr2")) {
            juegoActual.getJugArr().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArr().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("ab2")) {
            juegoActual.getJugAb().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAb().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("abdcha2")) {
            juegoActual.getJugAbDcha().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAbDcha().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("abizda2")) {
            juegoActual.getJugAbIzda().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugAbIzda().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("arrdcha2")) {
            juegoActual.getJugArrDcha().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArrDcha().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("arrizda2")) {
            juegoActual.getJugArrIzda().setCarta2(juegoActual.getBaraja().getBaraja().get(indice));
            juegoActual.getJugArrIzda().getjLabelCarta2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("flop1")) {
            juegoActual.setFlop1(juegoActual.getBaraja().getBaraja().get(indice));
            this.mw.getjLabelFlop1().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("flop2")) {
            juegoActual.setFlop2(juegoActual.getBaraja().getBaraja().get(indice));
            this.mw.getjLabelFlop2().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("flop3")) {
            juegoActual.setFlop3(juegoActual.getBaraja().getBaraja().get(indice));
            this.mw.getjLabelFlop3().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("turn")) {
            juegoActual.setTurn(juegoActual.getBaraja().getBaraja().get(indice));
            this.mw.getjLabelTurn().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        } else if (this.aux.equalsIgnoreCase("river")) {
            juegoActual.setRiver(juegoActual.getBaraja().getBaraja().get(indice));
            this.mw.getjLabelRiver().setIcon(new ImageIcon(juegoActual.getBaraja().getBaraja().get(indice).getRutaRep()));
        }
        juegoActual.getBaraja().getBaraja().remove(indice);
        this.dispose();
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeleccionCartas(juegoActual).setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables
}
